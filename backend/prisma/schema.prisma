generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  name     String?
  password String
  posts    Post[]
  bookmarks Bookmark[]
  claps     Clap[]
  comments  Comment[]

}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  bookmarks Bookmark[]
  claps         Clap[]
  comments      Comment[]
  tagsOnPost    TagsOnPost[]
}

model Bookmark {
  id     String @id @default(uuid())
  User   User   @relation(fields: [userId], references: [id])
  userId String
  Post   Post   @relation(fields: [postId], references: [id])
  postId String
}

model Clap {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String
}

model Comment {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String
}

model Tag {
  id            String @id @default(uuid())
  tagName       String
  creationDate  DateTime     @default(now())
  tagsOnPost    TagsOnPost[]
}

model TagsOnPost {
  id      String @id @default(uuid())
  tag     Tag   @relation(fields: [tagId], references: [id], onDelete: Cascade)
  tagId   String
  post    Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId  String
}
